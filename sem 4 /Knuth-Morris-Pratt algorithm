#include<iostream>
#include<conio.h>
using namespace std;
int f[10];
char t[25], p[10];
void KMPFailure(int m)
{
	int i = 1, j = 0;
	f[0] = 0;
	while (i < m)
	{
		if (p[j] == p[i])
		{
			f[i] = j + 1;
			i++;
			j++;
		}
		else if (j > 0)
		{
			j = f[j - 1];
		}
		else
		{
			f[i] = 0;
			i++;
		}
	}
}
int KMPMatch(int n, int m)
{
	int i = 0, j = 0;
	while (i < n)
	{
		if (p[j] == t[i])
		{
			if (j == m - 1)
				return i - m + 1;
			i++;
			j++;
		}
		else if (j > 0)
			j = f[j - 1];
		else
			i++;
	}
	return -1;
}
int main()
{
	int n, m, index;
	cout << "Enter the size of the string:";
	cin >> n;
	cout << "Enter the size of the search string:";
	cin >> m;
	cout << "Enter the the string\n";
	for (int i = 0; i < n; i++)
	{
		cin >> t[i];
	}
	cout << "Enter the search string\n";
	for (int i = 0; i < m; i++)
	{
		cin >> p[i];
	}
	KMPFailure(m);
	index = KMPMatch(n, m);
	if (index == -1)
		cout << "String not found";
	else
		cout << "The substring is found at:"<<index;
	_getch();
}
